{"version":3,"sources":["components/Form/index.js","components/TodoList/index.js","App.js","index.js"],"names":["Form","setTask","setFilter","filter","useState","newTask","setNewTask","className","onSubmit","e","preventDefault","prevState","concat","id","Math","random","completed","type","value","placeholder","onChange","target","TodoList","task","editId","setEditId","editedTask","setEditedTask","sort","a","b","map","divBox","onClick","newTodos","el","doneTask","deleteTask","editTask","App","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc7dc092.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\n\nconst Form = ({ setTask, setFilter, filter }) => {\n  const [newTask, setNewTask] = useState('');\n\n  const updateTodo = (e) => {\n    e.preventDefault();\n\n    if (newTask !== '') {\n      setTask((prevState) =>\n        prevState.concat({\n          newTask,\n          id: Math.random() * 1000,\n          completed: false,\n        })\n      );\n\n      setNewTask('');\n    }\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <form onSubmit={updateTodo}>\n        <input\n          className=\"Todo-input\"\n          type=\"text\"\n          value={newTask}\n          placeholder=\"Enter new task\"\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button type=\"submit\" className=\"create-btn\">\n          Add Task\n        </button>\n        <select\n          className=\"select\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"active\">Active</option>\n        </select>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport './style.css';\n\nconst TodoList = ({ task, setTask, filter }) => {\n  const [editId, setEditId] = useState('');\n  const [editedTask, setEditedTask] = useState('');\n\n  const deleteTask = (id) => {\n    const newTodos = task.filter((el) => el.id !== id);\n    setTask(newTodos);\n  };\n\n  const doneTask = (id) => {\n    const newTodos = task.map((el) => {\n      if (el.id === id)\n        return {\n          ...el,\n          completed: !el.completed,\n        };\n      else return el;\n    });\n    setTask(newTodos);\n  };\n\n  const editTask = (id) => {\n    const newTodos = task.map((el) => {\n      if (el.id === id)\n        return {\n          ...el,\n          newTask: editedTask,\n        };\n      else return el;\n    });\n    setTask(newTodos);\n    setEditId('');\n  };\n\n  return (\n    <div className=\"todo-wrapper\">\n      {task\n        .sort((a, b) => a.completed - b.completed)\n        .map(({ id, completed, newTask }) => {\n          const divBox = (\n            <div className=\"task-box-wrapper\">\n              <div key={id} className=\"task-box\">\n                <button\n                  type=\"button\"\n                  className=\"done btn\"\n                  onClick={() => doneTask(id)}\n                >\n                  {completed ? 'Undone?' : 'Done?'}\n                </button>\n                <p\n                  className={\n                    completed ? 'task-field line-through' : 'task-field'\n                  }\n                >\n                  {newTask}\n                </p>\n                <button\n                  type=\"button\"\n                  className=\"delete btn\"\n                  onClick={() => deleteTask(id)}\n                >\n                  Delete\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"edit btn\"\n                  onClick={() => {\n                    if (editId === id) setEditId('');\n                    else setEditId(id);\n                  }}\n                >\n                  Edit\n                </button>\n              </div>\n              {editId === id && (\n                <form className=\"edit-box\" onSubmit={() => editTask(id)}>\n                  <input\n                    type=\"text\"\n                    className=\"edit-input\"\n                    placeholder=\"Edit task here\"\n                    onChange={(e) => setEditedTask(e.target.value)}\n                  />\n                  <button type=\"submit\" className=\"apply btn\">\n                    Apply\n                  </button>\n                </form>\n              )}\n            </div>\n          );\n\n          if (filter === 'all' && (completed || true)) return divBox;\n          else if (filter === 'active' && completed === false) return divBox;\n          else if (filter === 'completed' && completed === true) return divBox;\n          else return null;\n        })}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\nconst App = () => {\n  const [task, setTask] = useState([]);\n  const [filter, setFilter] = useState('all');\n\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"heading\">ToDo List</h1>\n      <Form setTask={setTask} setFilter={setFilter} filter={filter} />\n      {task.length === 0 ? (\n        'No task yet!'\n      ) : (\n        <TodoList task={task} setTask={setTask} filter={filter} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}